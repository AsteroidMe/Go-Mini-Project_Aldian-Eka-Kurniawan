name: CI/CD pipeline

on:
  push:
    branches:
        - main

jobs:
    test:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout the code
              uses: actions/checkout@v2

            - name: Setup go
              uses: actions/setup-go@v3
              with:
                go-version: 1.21
        
            - name: Run tests
              run: |
                go test -v ./...

    build-and-push-docker:
        runs-on: ubuntu-latest
        needs: test
        steps:
            - name: Checkout the code
              uses: actions/checkout@v2

            - name: Create .env file
              run: |
                echo "${{ secrets.ENV }}" >> .env

            - name: Build docker image
              run: docker build -t aldianekak/mini-project-alterra:1.0.0 .
            
            - name: Login to docker hub
              uses: docker/login-action@v1
              with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_SECRET_KEY }}

            - name: Push docker image
              run: docker push aldianekak/mini-project-alterra:1.0.0
    
    deploy:
        needs: build-and-push-docker
        runs-on: ubuntu-latest
        env:
            IMAGE_URI: aldianekak/mini-project-alterra:1.0.0
            EC2_HOST: ${{ secrets.EC2_HOST }}
            EC2_USER: ${{ secrets.EC2_USER }}

        steps:
        - name: Check out the code
          uses: actions/checkout@v2

        - name: Create PEM file from secret
          run: |
                echo "${{ secrets.EC2_PEM_KEY }}" > ec2-key.pem
                chmod 600 ec2-key.pem

        - name: Deploy to EC2
          run: |
            ssh -i ec2-key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << EOF
            # Stop the current container if running
            sudo docker ps -q --filter "name=ejapp" | grep -q . && sudo docker stop ejapp || true
            sudo docker rm ejapp || true

            # Pull the latest image from ECR
            sudo docker pull $IMAGE_URI

            # Run the new container
            sudo docker run -d --name ejapp -p 8000:8000 $IMAGE_URI
            EOF

        - name: Clean up PEM file
          run: rm -f ec2-key.pem

            